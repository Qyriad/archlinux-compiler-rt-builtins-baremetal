# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>

_pkgname=compiler-rt
pkgname=$_pkgname-riscv-baremetal
pkgver=12.0.1
pkgrel=2
pkgdesc="Baremetal arm compiler runtime libraries for clang"
arch=('any')
url="https://compiler-rt.llvm.org/"
license=('custom:Apache 2.0 with LLVM Exception')
depends=('compiler-rt')
makedepends=('llvm' 'clang' 'cmake' 'python')
options=('staticlibs' '!strip')
_source_base=https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver
source=($_source_base/$_pkgname-$pkgver.src.tar.xz{,.sig})
sha256sums=('b4c8d5f2a802332987c1c0a95b5afb35b1a66a96fe44add4e4ed4792c4cba0a4'
            'SKIP')
validpgpkeys+=('B6C8F98282B944E3B0D5C2530FC3042E345AD05D') # Hans Wennborg <hans@chromium.org>
validpgpkeys+=('474E22316ABF4785A88C6E8EA2C794A986419D8A') # Tom Stellard <tstellar@redhat.com>
#triples=('armv7-none-eabi' 'armv7s-none-eabi' 'armv7k-none-eabi' #'arm64-none-eabi' 'arm64e-none-eabi'
  #'armv6m-none-eabi' 'armv7m-none-eabi' 'armv7em-none-eabi')
#targets=('armv7' 'armv7s' 'armv7k' 'armv6m' 'armv7m' 'armv7em')
targets=('riscv32' 'riscv64')

prepare() {
  cd "$srcdir/$_pkgname-$pkgver.src"
  rm -rf build
  mkdir build
}

build() {

  for target in "${targets[@]}"; do
    triple="${target}-none-eabi"
    mkdir -p "$srcdir/$_pkgname-$pkgver.src/build.$target"
    cd "$srcdir/$_pkgname-$pkgver.src/build.$target"

    cflags="--target=$triple --sysroot=/usr/riscv64-elf -mno-relax" # --gcc-toolchain=/usr/lib/gcc/arm-none-eabi"
    ldflags="-fuse-ld=lld -nostdlib"

    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_ASM_COMPILER=/usr/bin/clang -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ \
      -DCMAKE_ASM_COMPILER_TARGET=$triple -DCMAKE_C_COMPILER_TARGET=$triple -DCMAKE_CXX_COMPILER_TARGET=$triple \
      -DCMAKE_ASM_FLAGS="$cflags" -DCMAKE_C_FLAGS="$cflags" -DCMAKE_CXX_FLAGS="$cflags" -DCMAKE_EXE_LINKER_FLAGS="$ldflags" \
      -DCMAKE_CXX_COMPILER_WORKS=ON \
      -DCOMPILER_RT_BAREMETAL_BUILD=ON -DCOMPILER_RT_DEFAULT_TARGET_ONLY=ON -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
      -DCOMPILER_RT_INCLUDE_TESTS=OFF -DCOMPILER_RT_BUILD_SANITIZERS=OFF -DCOMPILER_RT_BUILD_XRAY=OFF -DCOMPILER_RT_BUILD_LIBFUZZER=OFF -DCOMPILER_RT_BUILD_PROFILE=OFF

    make "clang_rt.builtins-$target"

  done

}

package() {

  mkdir -p "$pkgdir/usr/arm-none-eabi/lib"
  mkdir -p "$pkgdir/usr/lib/clang/${pkgver}/lib/baremetal"
  for target in "${targets[@]}"; do
    cd "$srcdir/$_pkgname-$pkgver.src/build.$target"
    #DESTDIR="$pkgdir" ninja install
    #make install DESTDIR="$pkgdir"
    cp "lib/linux/libclang_rt.builtins-${target}.a" "$pkgdir/usr/arm-none-eabi/lib"
    cp "lib/linux/libclang_rt.builtins-${target}.a" "$pkgdir/usr/lib/clang/${pkgver}/lib/baremetal"
  done

  #mkdir -p "$pkgdir"/usr/lib/clang/$pkgver/lib
  #mv "$pkgdir"/usr/lib/{linux,clang/$pkgver/lib/linux}
}

# vim:set ts=2 sw=2 et:
